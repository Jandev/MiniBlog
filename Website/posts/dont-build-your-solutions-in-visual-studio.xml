<?xml version="1.0" encoding="utf-8"?>
<post>
  <title>Don’t build your solutions in Visual Studio</title>
  <slug>dont-build-your-solutions-in-visual-studio</slug>
  <author>Jan</author>
  <pubDate>2013-01-15 17:40:00</pubDate>
  <lastModified>2014-04-25 12:06:07</lastModified>
  <content>&lt;p&gt;The solutions in the project I’m working on are quite big and can easily take up 30 to 90 seconds to build, even though we have rather fast laptops. This is probably because of some build-plugins we are forced to use and the tight SharePoint integration of those plugins. Nevertheless, it’s quite annoying to see Visual Studio ‘hang’ every time you build your solution.&lt;/p&gt; &lt;p&gt;Last week I had some time on my hands to do some research on how we could improve these long builds. Turns out you can call &lt;a href="http://msdn.microsoft.com/en-us/library/wea2sca5(v=vs.80).aspx"&gt;MSBuild&lt;/a&gt; directly and let your solution compile outside of the Visual Studio instance. The build will still take up about the same amount of time, but it’s less annoying as you can still do some work in Visual Studio.&lt;/p&gt; &lt;p&gt;I’ve used &lt;a href="http://www.hanselman.com/blog/HackParallelMSBuildsFromWithinTheVisualStudioIDE.aspx"&gt;Scott Hanselman’s blogpost&lt;/a&gt; to create some new External Tools in Visual Studio, placed them in my Menu and created keyboard shortcuts for them.&lt;/p&gt; &lt;p&gt;At the moment I’ve got 3 new items in my menu to build my complete solution, clean my complete solution and to build the project I’m currently working in.&lt;/p&gt; &lt;p&gt;&lt;a href="http://jan-v.nl/Media/Default/Windows-Live-Writer/Build-your-solutions-with_C136/clip_image001_2.png"&gt;&lt;img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="clip_image001" border="0" alt="clip_image001" src="http://jan-v.nl/Media/Default/Windows-Live-Writer/Build-your-solutions-with_C136/clip_image001_thumb.png" width="386" height="39"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The ‘Clean Solution’ button bound to the default out-of-the-box functionality, offered by Visual Studio.&lt;/p&gt; &lt;p&gt;The External Tool ‘Solution (MSBuild)’ is configured like so:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Title&lt;/strong&gt;: MSBuild&lt;br&gt;&lt;strong&gt;Command&lt;/strong&gt;: C:\Windows\Microsoft.NET\Framework\v3.5\MSBuild.exe&lt;br&gt;&lt;strong&gt;Arguments&lt;/strong&gt;: $(SolutionFileName) /m:3 /p:BuildInParallel=true /v:m /p:WarningLevel=0 /p:Configuration=Debug&lt;br&gt;&lt;strong&gt;Initial directory&lt;/strong&gt;: $(SolutionDir)&lt;/p&gt; &lt;p&gt;The ‘Current Project (MSBuild)’ is implemented like this:&lt;/p&gt; &lt;p&gt;De 'External tool' achter de optie &lt;em&gt;Current Project (MSBuild)&lt;/em&gt;is als volgt:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Title&lt;/strong&gt;: MSBuild Project&lt;br&gt;&lt;strong&gt;Command&lt;/strong&gt;: C:\Windows\Microsoft.NET\Framework\v3.5\MSBuild.exe&lt;br&gt;&lt;strong&gt;Arguments&lt;/strong&gt;: $(ProjectFileName) /v:m /p:WarningLevel=0 /p:Configuration=Debug&lt;br&gt;&lt;strong&gt;Initial directory&lt;/strong&gt;: $(ProjectDir)&lt;/p&gt; &lt;p&gt;For both ‘tools’ I’ve set ‘&lt;em&gt;Use Output Window&lt;/em&gt;’ to &lt;strong&gt;true&lt;/strong&gt;. &lt;/p&gt; &lt;p&gt;What you are doing here is telling to do use 3 cores (/m:3), build the projects in parallel (/p:BuildInParallel=true (default)), use minimal logging (/v:m), ignore warnings (/p:WarningLevel=0) and use the debug configuration (/p:Configuration=Debug).&lt;/p&gt; &lt;p&gt;You can also add keyboard shortcuts to the options, this can be done in the screen below.&lt;/p&gt; &lt;p&gt;&lt;img alt="image" src="http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/HackParallelMSBuildsfromwithintheVisualS_1384B/image_12.png"&gt;&lt;/p&gt; &lt;p&gt;&lt;em&gt;&lt;span style="font-size: small" size="2"&gt;Disclaimer: copy-paste image of Scott Hanselman’s post&lt;/span&gt;&lt;/em&gt;&lt;/p&gt; &lt;p&gt;As Scott already mentions in his post, errors aren’t listed in the Error List of Visual Studio, but in the Output Window. If you’ve got a lot of errors, this can be quite annoying.&lt;/p&gt; &lt;p&gt;One other gotcha is the post-build step which is configured in some projects. We’ve got several projects which have post-build steps doing stuff, like aspnet_merge to merge all the usercontrols in the dll’s. This didn’t work anymore.&lt;/p&gt; &lt;p&gt;Apparently, this option, &lt;em&gt;When the build updates the project output&lt;/em&gt;, doesn’t work properly with MSBuild:&lt;/p&gt; &lt;p&gt;&lt;a href="http://jan-v.nl/Media/Default/Windows-Live-Writer/Build-your-solutions-with_C136/image_2.png"&gt;&lt;img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://jan-v.nl/Media/Default/Windows-Live-Writer/Build-your-solutions-with_C136/image_thumb.png" width="434" height="60"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You have to set it to &lt;em&gt;On successful build&lt;/em&gt;in order to run the post-build steps.&lt;/p&gt; &lt;p&gt;&lt;a href="http://jan-v.nl/Media/Default/Windows-Live-Writer/Build-your-solutions-with_C136/image_4.png"&gt;&lt;img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://jan-v.nl/Media/Default/Windows-Live-Writer/Build-your-solutions-with_C136/image_thumb_1.png" width="435" height="56"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;After having configured this, you are good to go and able to enjoy a responsive Visual Studio again. Also note, we are still working in Visual Studio 2008. It is said performance is a lot better in Visual Studio 2010 and Visual Studio 2012, but I haven’t used these products on this project yet, so I’m not sure about that.&lt;/p&gt; &lt;p&gt;There are also some other Visual Studio performance tuning tips, &lt;a href="http://jameslewiscv.com/post/2012/05/11/Performance-Tuning-Visual-Studio-Builds.aspx"&gt;James Lewis has summed some of them up in a blogpost&lt;/a&gt;.&lt;/p&gt;</content>
  <ispublished>true</ispublished>
  <categories></categories>
  <comments></comments>
</post>