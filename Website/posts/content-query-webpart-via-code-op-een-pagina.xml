<?xml version="1.0" encoding="utf-8"?>
<post>
  <title>Content Query Webpart via code op een pagina</title>
  <slug>content-query-webpart-via-code-op-een-pagina</slug>
  <author>Jan</author>
  <pubDate>2010-11-07 14:10:00</pubDate>
  <lastModified>2014-04-25 12:06:08</lastModified>
  <content>&lt;div class="ExternalClass3D94ED87F5E04FB99976E7B57EAE51E8"&gt;
&lt;p&gt;Tussen de opdrachten door ben ik bezig het provisioning proces van een Sharepoint 2010 public facing website te automatiseren. Een van de onderdelen die hier bij hoort is het plaatsen van de verschillende webparts op de pagina's.&lt;/p&gt;
&lt;p&gt;Tijdens het plaatsen van de custom CQWP's kwam ik er achter dat dit niet allemaal zo goed werkte. De webparts werden namelijk niet geplaatst en ik kon niet direct uitvinden waarom dit het geval was. Na een zoektocht kwam ik op het weblog van Waldek uit waar hij een mogelijke oplossing voor het probleem heeft, zie: &lt;a href="http://blog.mastykarz.nl/inconvenient-provisioning-content-query-web-part-instances/"&gt;http://blog.mastykarz.nl/inconvenient-provisioning-content-query-web-part-instances/&lt;/a&gt;. Hij heeft namelijk ook problemen gehad met het plaatsen van een CQWP op een pagina. Volgens hem komt het probleem voort uit het feit dat de HttpContext eerst leeg moet worden gevuld met informatie van de huidige gebruiker:&lt;/p&gt;
&lt;div&gt;
&lt;table style="border-collapse: collapse; background: #dbe5f1;" border="0"&gt;
&lt;colgroup span="1"&gt;&lt;col style="width: 633px;" span="1"&gt;&lt;/col&gt;&lt;/colgroup&gt; 
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style="padding-left: 7px; padding-right: 7px;"&gt;
&lt;p&gt;&lt;strong&gt;Quote:&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="padding-left: 7px; padding-right: 7px;"&gt;
&lt;p&gt;&lt;span style="font-family: Segoe UI; color: #333333; font-size: 10pt;"&gt;&lt;em&gt;It turns out that each time you instantiate&amp;nbsp;SPSite&amp;nbsp;the SharePoint Object Model reuses the context information if available. And if the context information you provided doesn't contain any information on the current user, the created reference will be as it was called by an anonymous user! The HttpContext.Current property is static so it will remain available during the whole deployment process unless you explicitly clear it. Back in June I provided you the following code snippet to imitate the context data:&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Gelukkig biedt hij ook de code aan welke gebruikt kan worden. Zelf heb ik de code enigszins aangepast, zodat het beter in m'n applicatie past. Voor referentie doeleinden, hier ook de code die ik zelf heb gebruikt:&lt;/p&gt;
&lt;div&gt;
&lt;table style="border-collapse: collapse; background: #595959;" border="0"&gt;
&lt;colgroup span="1"&gt;&lt;col style="width: 638px;" span="1"&gt;&lt;/col&gt;&lt;/colgroup&gt; 
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style="padding-left: 7px; padding-right: 7px; border: 0.5pt solid;"&gt;
&lt;p&gt;&lt;span style="font-family: Consolas; font-size: 10pt;"&gt;&lt;span style="color: blue;"&gt;bool&lt;/span&gt;&amp;nbsp;contextCreated&amp;nbsp;=&amp;nbsp;&lt;span style="color: blue;"&gt;false&lt;/span&gt;;&lt;br /&gt;&lt;span style="color: blue;"&gt;if&lt;/span&gt;&amp;nbsp;(HttpContext.Current&amp;nbsp;==&amp;nbsp;&lt;span style="color: blue;"&gt;null&lt;/span&gt;)&lt;br /&gt;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;HttpRequest&amp;nbsp;request&amp;nbsp;=&amp;nbsp;&lt;span style="color: blue;"&gt;new&lt;/span&gt;&amp;nbsp;HttpRequest(&lt;span style="color: #a31515;"&gt;""&lt;/span&gt;,&amp;nbsp;_currentWeb.Url,&amp;nbsp;&lt;span style="color: #a31515;"&gt;""&lt;/span&gt;);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;HttpContext.Current&amp;nbsp;=&amp;nbsp;&lt;span style="color: blue;"&gt;new&lt;/span&gt;&amp;nbsp;HttpContext(request,&amp;nbsp;&lt;span style="color: blue;"&gt;new&lt;/span&gt;&amp;nbsp;HttpResponse(&lt;span style="color: blue;"&gt;new&lt;/span&gt;&amp;nbsp;StringWriter()));&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;HttpContext.Current.Items[&lt;span style="color: #a31515;"&gt;"HttpHandlerSPWeb"&lt;/span&gt;]&amp;nbsp;=&amp;nbsp;_currentWeb;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;contextCreated&amp;nbsp;=&amp;nbsp;&lt;span style="color: blue;"&gt;true&lt;/span&gt;;&lt;br /&gt;}&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;En uiteraard de code om de context weer leeg te maken:&lt;/p&gt;
&lt;div&gt;
&lt;table style="border-collapse: collapse; background: #595959;" border="0"&gt;
&lt;colgroup span="1"&gt;&lt;col style="width: 633px;" span="1"&gt;&lt;/col&gt;&lt;/colgroup&gt; 
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style="padding-left: 7px; padding-right: 7px; border: 0.5pt solid;"&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&lt;span style="font-family: Consolas;"&gt;&lt;span style="color: blue;"&gt;if&lt;/span&gt;&amp;nbsp;(contextCreated)&lt;br /&gt;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;HttpContext.Current&amp;nbsp;=&amp;nbsp;&lt;span style="color: blue;"&gt;null&lt;/span&gt;;&lt;br /&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;Beide code blokken moeten worden aangeroepen, anders heb je kans dat de HttpContext problemen gaat opleveren in de rest van de code.&lt;/p&gt;
&lt;/div&gt;</content>
  <ispublished>true</ispublished>
  <categories></categories>
  <comments></comments>
</post>