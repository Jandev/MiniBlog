<?xml version="1.0" encoding="utf-8"?>
<post>
  <title>LINQ performance testen</title>
  <slug>linq-performance-testen</slug>
  <author>Jan</author>
  <pubDate>2008-03-16 14:09:00</pubDate>
  <lastModified>2014-04-25 12:06:08</lastModified>
  <content>&lt;div class="ExternalClass7A8CFDD137AC45AEAA27475563E687E9"&gt;Vandaag ben ik veel interessante artikelen tegen gekomen op het internet. Een daarvan is een LINQ to SQL performance test. Blijkbaar had &lt;strong&gt;Derik Whittaker&lt;/strong&gt; wat tijd over en heeft een performance test gedaan met verschillende manieren van de data-access op te bouwen. Het volledige artikel is op z'n weblog te lezen: http://devlicio.us/blogs/derik_whittaker/archive/2008/03/14/playing-with-linq2sql-and-various-performance-tests.aspx Z'n conclusie is dat wanneer je een generieke &lt;em&gt;DataContext&lt;/em&gt; gebruikt in je code, je enorm veel performance verlies hebt. Het hoe en waarom is hij nog niet achter, maar de uitvoer is ongeveer 7x langzamer dan wanneer je een 'goede' &lt;em&gt;DataContext&lt;/em&gt; gebruikt. In dit bovenste voorbeeld wordt een generieke DataContext gebruikt, de tweede een specifieke welke alleen voor de betreffende tabel kan worden gebruikt.
&lt;div class="code"&gt;# DataContext db = new DataContext(new SqlConnection(connectionString)); # IEnumerable sports = from s in db.GetTable() # select s;&lt;/div&gt;
&lt;div class="code"&gt;# SportsDemoDataContext db = new SportsDemoDataContext(new SqlConnection(connectionString)); # IEnumerable sports = from s in db.Sports # select s;&lt;/div&gt;
Na 10.000 keer de query uit te voeren blijkt dat het 2e voorbeeld met een gemiddelde van 13022 miliseconden wordt uitgevoerd en het 1e voorbeeld met een gemiddelde van 78042 miliseconden wordt uitgevoerd. Een behoorlijk verschil dus. Zelf maak ik ook gebruik van zo'n generieke &lt;em&gt;DataContext&lt;/em&gt; uit het eerste voorbeeld. Dit omdat je dat mooi in je &lt;em&gt;Base.cs&lt;/em&gt; kunt opnemen. In de eerstvolgende performance-tuning update zal ik dit aanpassen zodat iedere klasse z'n eigen, juiste, &lt;em&gt;DataContext&lt;/em&gt; krijgt. Het is toch mooi dat sommige mensen hier de tijd voor nemen om te testen. Zelf zou ik dat namelijk nooit doen, maar ik doe er wel weer m'n voordeel mee.&lt;/div&gt;</content>
  <ispublished>true</ispublished>
  <categories></categories>
  <comments></comments>
</post>