<?xml version="1.0" encoding="utf-8"?>
<post>
  <title>LINQ introductie</title>
  <slug>linq-introductie</slug>
  <author>Jan</author>
  <pubDate>2007-12-30 20:40:00</pubDate>
  <lastModified>2014-04-25 12:06:08</lastModified>
  <content>&lt;div class="ExternalClass971805B263F64B4FA64EC37483A07915"&gt;Aangezien ik bezig ben m'n weblog opnieuw te ontwikkelen, maar dan in .Net, heb ik maar gelijk gekozen voor het nieuwste framework, namelijk 3.5.&lt;br /&gt;Momenteel ondersteund de provider dit nog niet, maar aangezien ze ook behoorlijk snel waren met .Net 3.0 te installeren zal 3.5 binnenkort ook wel werken.&lt;br /&gt;&lt;br /&gt;Als eerste wil ik de DataAccess-laag maken. Eerst was ik van plan dit precies te doen zoals op het werk, maar dan met geautomatiseerde tools.&lt;br /&gt;Nu bedacht ik me dat je in .Net 3.5 uiteraard ook gebruik kunt maken van LINQ. Dit is nieuw, dus ook vet om te gebruiken.&lt;br /&gt;Of het echt goed is zullen we in de loop der jaren wel achter komen, maar ik wil het toch wel eens even gebruiken voordat er een subjectief oordeel over kan worden geveld. Iedereen vind de features natuurlijk wel enorm leuk, maar is het ook werkbaar?&lt;br /&gt;&lt;br /&gt;Om dit uit te vinden heb ik zojuist heel wat teksten gelezen op bekende en onbekende weblogs en MSDN-subsites.&lt;br /&gt;De website http://www.hookedonlinq.com/ heeft een duidelijk verhaal. Hier werd me in een keer duidelijk wat de verschillende LINQ versies doen. Hiermee bedoel ik dus &lt;em&gt;LINQ to SQL&lt;/em&gt;, &lt;em&gt;LINQ to XML&lt;/em&gt; en &lt;em&gt;LINQ to Objects&lt;/em&gt;.&lt;br /&gt;Momenteel wil ik alleen LINQ to SQL gebruiken, dus daar heb ik de meeste leestijd aan besteedt.&lt;br /&gt;Wat mij opviel is dat er met LINQ allemaal dynamische statments worden gegenereerd. Dit is juist iets waar veel ontwikkelaars vanaf zijn gestapt vanwege de SQL Injection. Volgens de voorstanders van LINQ heeft LINQ to SQL hier geen last van, aangezien de dynamische queries toch worden omgezet in zogenaamde &lt;em&gt;parameterized queries&lt;/em&gt;. Op zich leuk, maar ik wilde toch wel zeker weten of ik uberhaupt nog wel stored procedures kan gebruiken.&lt;br /&gt;Hier heeft Scott Guthrie een mooie post over gemaakt: http://weblogs.asp.net/scottgu/archive/2006/06/18/DLINQ-with-Stored-Procedures.aspx&lt;br /&gt;Ziet er behoorlijk eenvoudig en handig uit moet ik zeggen.&lt;br /&gt;&lt;br /&gt;Nu had ik al veel code gelezen, maar nog niet gevonden hoe ik LINQ to SQL echt kan gaan toevoegen aan m'n project.&lt;br /&gt;Dit heb ik dan weer op de MSDN website gevonden. De begin-pagina was deze http://msdn2.microsoft.com/nl-nl/library/bb384470(en-us).aspx (How to: Add LINQ to SQL Classes to a Project (O/R Designer))&lt;br /&gt;Door de links op deze pagina te volgen wordt redelijk snel duidelijk hoe je het moet doen.&lt;br /&gt;&lt;br /&gt;Het komt er op neer dat je een nieuw item moet toevoegen aan je project (&lt;em&gt;Add new item... --&amp;gt; LINQ to SQL Classes&lt;/em&gt;).&lt;br /&gt;Er wordt een mooi *.dbml bestand toegevoegd aan je project. Zelf heb ik deze de naam &lt;em&gt;WeblogDataclasses.dbml&lt;/em&gt; gegeven, maar ieder andere naam zal ook wel volstaan.&lt;br /&gt;Nu begint het sleur-en-pleur werk. Via de &lt;em&gt;Server Explorer&lt;/em&gt; kun je alle tabellen die je wilt gebruiken in je project toevoegen aan de lege pagina van het dbml-bestand.&lt;br /&gt;&lt;br /&gt;Wat ik ook wel leuk vind om te lezen is dat je ook gelijk validatie kunt toepassen met LINQ. De onderste link met de titel &lt;em&gt;Walkthrough: Adding Validation to Entity Classes&lt;/em&gt; vertelt stap voor stap wat je moet doen om validatie toe te passen op je objecten.&lt;br /&gt;&lt;br /&gt;Ook leuk is de &lt;em&gt;Data Sources Window&lt;/em&gt;. Hiermee kun je snel een gebruikersinterface maken. Hoe en of je dit los kunt koppelen van de DataAccess-laag weet ik nog niet. Het lijkt me aannemelijk dat alle Entity objecten ook bereikbaar zijn in de Business- en Presentatie-laag, maar daar zie ik momenteel nog weinig van terug.&lt;br /&gt;Alles staat volgens namelijk in het dbml-bestand, welke zich in de DataAccess bevind.&lt;br /&gt;Natuurlijk ben ik ook nog maar een uurtje echt bezig, dus het is niet onwaarschijnlijk dat ik nog niets mis of over het hoofd heb gezien.&lt;br /&gt;&lt;br /&gt;Nu ga ik eerst weer verder met het (af)maken van de laag.&lt;/div&gt;</content>
  <ispublished>true</ispublished>
  <categories></categories>
  <comments></comments>
</post>