<?xml version="1.0" encoding="utf-8"?>
<post>
  <title>Sharepoint 2010 Webtemplate en meerdere features</title>
  <slug>sharepoint-2010-webtemplate-en-meerdere-features</slug>
  <author>Jan</author>
  <pubDate>2010-11-23 17:24:00</pubDate>
  <lastModified>2014-04-25 12:06:08</lastModified>
  <content>&lt;div class="ExternalClass3A920F04DFBD433592CE736FDD1CA359"&gt;
&lt;p&gt;In Sharepoint 2010 is het nu mogelijk om gebruik te maken van webtemplates. Zoals ik het zie is dit een evolutie van een Site template en een site definitie, maar er zijn genoeg anderen die hier een betere uitleg over kunnen geven, Mirjam geeft hier bijvoorbeeld een goede uitleg over: &lt;a href="http://www.sharepointchick.com/archive/2010/06/15/site-definitions-vs.-webtemplates.aspx"&gt;Post 1&lt;/a&gt; &amp;amp; &lt;a href="http://www.sharepointchick.com/archive/2010/03/11/using-the-sharepoint-2010-webtemplate-feature-element-for-creating-site.aspx"&gt;Post 2&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Omdat het gebruik van een webtemplate wel heel handig lijkt, heb ik dan ook besloten om dit te gebruiken voor het provisionen van m'n Sharepoint 2010 website(s).&lt;/p&gt;
&lt;p&gt;Het aanmaken kan gewoon door het plaatsen van een leeg element binnen je solution en deze in een feature te plaatsen. Dit ga ik hier niet beschrijven, omdat er al andere blogs zijn die dit goed hebben gedaan, zie bijvoorbeeld &lt;a href="http://stefan-stanev-sharepoint-blog.blogspot.com/2010/03/sharepoint-2010-webtemplate-feature.html"&gt;Stefan Stanev's blog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Komt er eigenlijk gewoon op neer dat je een nieuw element maakt en hier een onet.xml in plaatst en de bijbehorende bestanden:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://weblogjanv/Lists/Photos/112310_1622_Sharepoint21.png" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;Let hier wel op dat met een webtemplate geen modules kunnen worden ge-provisioned. Het is dus waarschijnlijk verstandig om de default.aspx te verwijderen en de onet.xml aan te passen dat de modules niet meer worden gebruikt.&lt;br /&gt;De opmaak van het Elements.xml kan wel uit een van de eerdere gelinkte posts worden gehaald.&lt;/p&gt;
&lt;p&gt;Na activatie van de wsp zullen alle features binnen de solution worden geactiveerd binnen de site collectie (heb als target de Site genomen). Een prima manier om je webtemplate uit te rollen en daarom ging ik ook verder met de bouw.&lt;/p&gt;
&lt;p&gt;Nu wilde ik onlangs weer het hele provisioning proces testen op m'n testomgeving en kreeg continu de melding dat er al een lijst bestond met dezelfde naam, zie hieronder:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://weblogjanv/Lists/Photos/112310_1622_Sharepoint22.png" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;Na het bestuderen van de log-bestanden bleek het te gaan om de Pages lijst. Deze lijst was echter niet zichtbaar in de website, dus ging ik er van uit dat er iets foutief was aangepast in de features. Na lang zoeken kon ik er niet echt achter komen waarom het steeds fout bleef gaan, totdat ik met Sharepoint Designer ging kijken.&lt;/p&gt;
&lt;p&gt;Een andere provisioning feature (van het Web) had bij activatie nieuwe pagina's gemaakt in de lijst (eigenlijk map) Pages. Deze map werd dus door de feature aangemaakt tijdens activatie, waardoor de webtemplate deze niet meer kon aanmaken tijdens het uitrollen van de webtemplate.&lt;/p&gt;
&lt;p&gt;Iets wat dus niet op alle sites wordt vermeld is dus dat een webtemplate in een eigen Sharepoint solution moet worden opgenomen, of dat je in ieder geval rekening houdt met het feit dat alle features worden geactiveerd binnen de solution.&lt;/p&gt;
&lt;p&gt;Nu heb ik de webtemplate dus in een lege Sharepoint solution geplaatst en uitgerold. Afgezien van dat ik nu andere problemen heb met het uitrollen (die hier niets mee te maken hebben), lijkt het provisionen nu prima te verlopen.&lt;/p&gt;
&lt;/div&gt;</content>
  <ispublished>true</ispublished>
  <categories></categories>
  <comments></comments>
</post>