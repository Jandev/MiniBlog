<?xml version="1.0" encoding="utf-8"?>
<post>
  <title>Toch geen ei van Columbus?</title>
  <slug>toch-geen-ei-van-columbus</slug>
  <author>Jan</author>
  <pubDate>2007-12-31 07:12:00</pubDate>
  <lastModified>2014-04-25 12:06:08</lastModified>
  <content>&lt;div class="ExternalClass4F63FA572715442F8264EC579B02019F"&gt;Hoewel LINQ to SQL me gisteren wel het ei van Columbus leek ben ik daar vandaag niet meer zo zeker van.&lt;br /&gt;Vanavond heb ik een beetje gezocht hoe je LINQ to SQL in een n-tier architectuur kunt gebruiken. Wanneer je dit in Google opzoekt zie je veel probleem verhalen en weinig successen.&lt;br /&gt;Op de MSDN-site staat wel globaal beschreven hoe je het zou kunnen doen, maar een echt real-life voorbeeld is niet echt aanwezig. Tenminste niet zoals ik het graag wil zien.&lt;br /&gt;Via deze link: http://msdn2.microsoft.com/en-us/library/bb882661.aspx&lt;br /&gt;krijg je wel weer genoeg leesvoer.&lt;br /&gt;Vooral de hoofdstukken &lt;em&gt;Implementing Business Logic (LINQ to SQL)&lt;/em&gt; ( http://msdn2.microsoft.com/en-us/library/bb882671.aspx ) en &lt;em&gt;Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)&lt;/em&gt; ( http://msdn2.microsoft.com/en-us/library/bb546187.aspx ) vond ik enigzins interessant.&lt;br /&gt;&lt;br /&gt;Het lijkt alsof je de objecten die je vanuit je dbml bestand (LINQ) krijgt worden ge-detached wanneer je ze in een andere laag gebruikt. Zodra je de wijzigingen wilt opslaan moet het gehele &lt;strong&gt;originele&lt;/strong&gt; object weer terug worden gekoppeld, samen met een kopie van het originele object met daarin de wijzigingen. Of je maakt de wijzigingen in de LINQ-laag, maar dan kan het zijn dat je zo'n 40 parameters aan een functie moet toevoegen. Dat is natuurlijk ook niet echt overzichtelijk.&lt;br /&gt;&lt;br /&gt;Mede door deze site ben ik een beetje ontmoedigd: http://cs.rthand.com/blogs/blog_with_righthand/archive/2007/10/06/LINQ-to-SQL-showstoppers.aspx&lt;br /&gt;Hier staan een paar nadelen van LINQ to SQL opgesomd waar je gelijk tegen aan loopt.&lt;br /&gt;Dit staat trouwens los van LINQ to Objects en LINQ to XML. Dat kan wel goed werken, alleen L2SQL lijkt iets minder handig te zijn qua implementatie.&lt;br /&gt;&lt;br /&gt;Een post die ik nog tegenkwam van Kevin Hoffman is hier te vinden: http://dotnetaddict.dotnetdevelopersjournal.com/adoef_vs_linqsql.htm&lt;br /&gt;Hier wordt even opgesomd waarom L2E beter gaat worden dan L2SQL. Hopelijk zijn de problemen die ik nu ondervind opgelost met L2E.&lt;br /&gt;Voor nu zal ik proberen m'n DAL of EAL of hoe je de laag ook maar wilt noemen, te ontwikkelen met L2SQL.&lt;/div&gt;</content>
  <ispublished>true</ispublished>
  <categories></categories>
  <comments></comments>
</post>