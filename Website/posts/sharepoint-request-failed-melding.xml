<?xml version="1.0" encoding="utf-8"?>
<post>
  <title>Sharepoint 'Request Failed' melding</title>
  <slug>sharepoint-request-failed-melding</slug>
  <author>Jan</author>
  <pubDate>2008-10-21 19:18:00</pubDate>
  <lastModified>2014-04-25 12:06:08</lastModified>
  <content>&lt;div class="ExternalClassBCB95843C8584F259B0FD95E2970E872"&gt;De laatste tijd was ik bezig met het maken van een Sinterklaas website in Sharepoint (WSS 3.0 welteverstaan). Dit ging prima, totdat ik hem voor de buitenwereld beschikbaar wilde maken. Via de AAM heb ik de website beschikbaar gemaakt voor de buitenwereld via een ander domein van mij. Dit werkte redelijk goed. Jammergenoeg kon ik de website niet onder poort 80 hosten, want het lijkt alsof Ziggo dat blokkeert. Nu heb ik dus maar een poort met een veel hoger nummer gebruikt. Dit werkte ook goed en de hoofdpagina kon nu worden bekeken. Er was echter 1 groot probleem. Zodra iemand naar een andere pagina navigeerde kregen ze de melding '&lt;em&gt;Request Failed&lt;/em&gt;'. Het vervelende hieraan was, was dat er geen error informatie werd getoond in de logs of op het scherm. Ook kon ik hier geen logische verklaring voor geven. Eerst dacht ik dat het misschien aan het poortnummer zou liggen, maar dat heb ik ook uitgesloten. Uiteindelijk heb ik de web.config maar aangepast in de hoop dat ik meer informatie zou krijgen door de &lt;em&gt;callstack="true"&lt;/em&gt; parameter aan te passen. Hier had ik geluk mee. Nu kreeg ik bij de 'Request Failed' melding een .Net foutmelding waar ik iets meer mee kon. De exacte melding was iets als dit:
&lt;div class="code"&gt;Request failed. at System.Reflection.Assembly._GetType(String name, Boolean throwOnError, Boolean ignoreCase) at System.Web.UI.TemplateParser.GetType(String typeName, Boolean ignoreCase, Boolean throwOnError) at System.Web.UI.TemplateParser.ProcessInheritsAttribute(String baseTypeName, String codeFileBaseTypeName, String src, Assembly assembly) at System.Web.UI.TemplateParser.PostProcessMainDirectiveAttributes(IDictionary parseData)&lt;/div&gt;
Niet echt veelzeggend, maar hier kon ik wel verder mee komen. Via Google kwam ik op een weblog post van Corey Roth op de link http://www.dotnetmafia.com/blogs/dotnettipoftheday/archive/2008/09/24/safe-mode-did-not-start-successfully-request-failed.aspx Blijkbaar startte de safe-mode van Sharepoint niet op door een misconfiguratie in m'n web.config of systeem. Opeens had ik het. Onlangs had ik namelijk de &lt;em&gt;CompleteSharepoint&lt;/em&gt; module zonder geinstalleerd ( http://www.completesharepoint.net/ ). Er waren echter wel allerlei regels in m'n web.config geplaatst en dll's in de bin-directory. Deze regels heb ik uit de web.config verwijderd (van zowel de interne als externe url) en de bestanden uit de bin-directory van beide sites verwijderd. Na het deinstalleren van de CompleteSharepoint module heb ik nog wel wat vervuiling op het systeem, maar voor nu kon ik in ieder geval verder. Na het verwijderen heb ik wel weer een &lt;em&gt;iisreset&lt;/em&gt; gedaan. Of dat nodig is weet ik niet, maar het kan natuurlijk nooit kwaad. Ik had niet verwacht dat het probleem zo 'simpel' op te lossen zou zijn. In ieder geval kan m'n site nu worden gepubliceerd en kunnen we er voor het Sinterklaas feest gebruik van maken.&lt;/div&gt;</content>
  <ispublished>true</ispublished>
  <categories></categories>
  <comments></comments>
</post>